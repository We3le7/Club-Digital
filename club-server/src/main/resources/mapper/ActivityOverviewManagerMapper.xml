<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.club.mapper.ActivityOverviewManagerMapper">
    <!--根据用户提供的信息查询活动概览-->
    <select id="getActivityOverviewByConditions" resultType="com.club.vo.ActivityOverviewManagerVO">
        select a.activity_id,a.title,a.content,a.views,a.favorites,a.state,a.review_datetime,
        <!--查询出所在校区的名称-->
        REPLACE(
        (SELECT JSON_EXTRACT(config_info.kind, CONCAT('$."', a.district, '"'))
        FROM config_info
        WHERE config_info.id = 2),'\"', '') as district,
        <!--查询每一个活动的第一张照片的url-->
        (select activity_picture.activity_picture_url from activity_picture where activity_picture.activity_id=a.activity_id
        limit 1)as activityPictureUrl
        from activity a
        <where>
            <if test="title!=null">
                and a.title like concat('%',#{title},'%')
            </if>
            <if test="clubId">
                and a.club_id=#{clubId}
            </if>
            <if test="district != null and district!=0">
                AND a.district = #{district}
            </if>
            <if test="district!=null and district==0">
                AND a.district in (1,2,3,4,5)
            </if>
            <if test="state!=null">
                and a.state=#{state}
            </if>
            <if test="reviewDateStart!=null">
                and a.review_datetime &gt;= #{reviewDateStart}
            </if>
            <if test="reviewDateEnd!=null">
                and a.review_datetime &lt;= #{reviewDateEnd}
            </if>
        </where>
        <!--按照views进行排序-->
        <choose>
            <when test="byViews == 1"> <!-- 如果参数为1，则按照views降序排序 -->
                order by a.views DESC
            </when>
            <when test="byViews == 2"> <!-- 如果参数为2，则按照views升序排序 -->
                order by a.views ASC
            </when>
            <otherwise> <!-- 其他情况，不排序 -->
                <!-- 不添加order by子句 -->
            </otherwise>
        </choose>

        <!--按照favorites进行排序-->
        <choose>
            <when test="byFavorites == 1"> <!-- 如果参数为1，则按照favorites降序排序 -->
                order by a.favorites DESC
            </when>
            <when test="byFavorites == 2"> <!-- 如果参数为2，则按照favorites升序排序 -->
                order by a.favorites ASC
            </when>
            <otherwise> <!-- 其他情况，不排序 -->
                <!-- 不添加order by子句 -->
            </otherwise>
        </choose>

        <!--按照发布时间进行排序-->
        <choose>
            <when test="byReviewDatetime == 1"> <!-- 如果参数为1，则按照reviewDatetime降序排序 -->
                order by a.review_datetime DESC
            </when>
            <when test="byReviewDatetime == 2"> <!-- 如果参数为2，则按照reviewDatetime升序排序 -->
                order by a.review_datetime ASC
            </when>
            <otherwise> <!-- 其他情况，不排序 -->
                <!-- 不添加order by子句 -->
            </otherwise>
        </choose>
    </select>
    
    <!--社团管理端获取该用户所管的社团信息-->
    <select id="getClubInfoByUserId" resultType="com.club.vo.ClubInfoUserVO">
        select club_info.club_id,club_info.club_name
        from club_info,membership
        where membership.student_id=#{userId} and membership.role!=3 and membership.club_id=club_info.club_id
    </select>

    <!--社团管理端获取报名列表-->
    <select id="getStudentInfoByActivityId" resultType="com.club.vo.StudentInfoVO">
        select s.student_id,s.student_num,s.student_name,
               CASE
                   WHEN s.sex = 1 THEN '男'
                   ELSE '女'
                   END AS sex,
               CASE
                   WHEN s.level = 1 THEN '本科生'
                   WHEN s.level = 2 THEN '研究生'
                   ELSE '博士生'
                   END AS level,
            s.college,s.grade,s.phone_num,s.email
        from student_info s,activity_registration ar
        where ar.activity_id=#{activityId} and ar.student_id=s.student_id
    </select>

    <!--社团管理端获取活动的详细信息-->
    <select id="getActivityDetailsByActivityId" resultType="com.club.vo.ActivityDetailsManagerVO">
        select a.activity_id,a.title,a.district,a.specific_addr,a.views,a.favorites,a.state,a.comment,
               a.start_datetime,a.end_datetime,a.require_registration,a.registration_start,a.registration_end,
               a.review_datetime,a.visibility,a.responsible_person,a.phone_num,a.content,a.activity_type_id,
        REPLACE(
        (SELECT JSON_EXTRACT(config_info.kind, CONCAT('$."', a.activity_type_id, '"'))
        FROM config_info
        WHERE config_info.id = 5),'\"', '') as activityType

        from activity a
        where a.activity_id=#{activityId} and a.club_id=#{clubId}
    </select>

    <!--社团管理端根据活动id和社团id获取活动图片-->
    <select id="getPhotoUrlsByActivityId" resultType="java.lang.String">
        SELECT activity_picture_url
        from activity_picture,activity
        where activity.activity_id=#{activityId} and activity.club_id=#{clubId}
        and activity.activity_id=activity_picture.activity_id
    </select>

    <!--社团管理端根据活动id和社团id获取活动附件-->
    <select id="getFileUrlsByActivityId" resultType="java.lang.String">
        SELECT activity_file_url
        from activity_file,activity
        where activity.activity_id=#{activityId} and activity.club_id=#{clubId}
          and activity.activity_id=activity_file.activity_id
    </select>

    <!--社团管理端添加新的活动的基本信息-->
    <insert id="addActivity" useGeneratedKeys="true" keyProperty="activityId">
        insert into
        activity(title,district,specific_addr,views,favorites,state,comment,start_datetime,end_datetime,require_registration,
        registration_start,registration_end,application_datetime,visibility,responsible_person,phone_num,content,club_id,
        department_id,activity_type_id)
        VALUES(#{title},#{district},#{specificAddr},0,0,0,"",#{startDatetime},
               #{endDatetime},#{requireRegistration},#{registrationStart},#{registrationEnd},#{applicationDatetime},#{visibility},
               #{responsiblePerson},#{phoneNum},#{content},#{clubId},#{departmentId},#{activityTypeId})
    </insert>

    <!--社团管理端添加活动的照片url信息-->
    <insert id="addActivityPicture">
        INSERT INTO activity_picture (activity_id, activity_picture_url) VALUES
        <foreach collection="activityPictureUrl" item="url" separator=",">
           (#{activityId}, #{url})
        </foreach>
    </insert>

    <!--社团管理端添加活动的附件url信息-->
    <insert id="addActivityFile">
        INSERT INTO activity_file (activity_id, activity_file_url) VALUES
        <foreach collection="activityFileUrl" item="url" separator=",">
            (#{activityId}, #{url})
        </foreach>
    </insert>

    <!--社团管理端更新活动的基本信息-->
    <update id="updateActivity">
        update activity
        <set>
            <if test="title!=null">
                title=#{title},
            </if>
            <if test="district!=null">
                district=#{district},
            </if>
            <if test="specificAddr!=null">
                specific_addr=#{specificAddr},
            </if>
            <if test="views">
                views=#{views},
            </if>
            <if test="favorites">
                favorites=#{favorites},
            </if>
            <if test="comment!=null">
                comment=#{comment},
            </if>
            <if test="startDatetime!=null">
                start_datetime=#{startDatetime},
            </if>
            <if test="endDatetime!=null">
                end_datetime=#{endDatetime},
            </if>
            <if test="requireRegistration">
                require_registration=#{requireRegistration},
            </if>
            <if test="registrationStart!=null">
                registration_start=#{registrationStart},
            </if>
            <if test="registrationEnd!=null">
                registration_end=#{registrationEnd},
            </if>
            <if test="visibility!=null">
                visibility=#{visibility},
            </if>
            <if test="responsiblePerson!=null">
                responsible_person=#{responsiblePerson},
            </if>
            <if test="phoneNum!=null">
                phone_num=#{phoneNum},
            </if>
            <if test="content!=null">
                content=#{content},
            </if>
            <if test="clubId!=null">
                club_id=#{clubId},
            </if>
            <if test="departmentId!=null">
                department_id=#{departmentId},
            </if>
            <if test="activityTypeId!=null">
                activity_type_id=#{activityTypeId},
            </if>
                review_datetime=null,
                state=0
        </set>
        where activity_id=#{activityId}
    </update>
</mapper>